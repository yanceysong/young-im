server:
  port: 8001
  undertow:
    # 阻塞任务线程池, 当执行类似servlet请求阻塞IO操作, undertow会从这个线程池中取得线程
    # 它的值设置取决于系统线程执行任务的阻塞系数，默认值是IO线程数*8
    # 以下的配置会影响buffer,这些buffer会用于服务器连接的IO操作,有点类似netty的池化内存管理
    # 每块buffer的空间大小,越小的空间被利用越充分，不要设置太大，以免影响其他应用，合适即可
    buffer-size: 1024
    # 是否分配的直接内存(NIO直接分配的堆外内存)
    direct-buffers: true
    threads:
      io: 16
      worker: 256
spring:
  profiles:
    active: dev
  datasource:
    driver-class-name: com.mysql.jdbc.Driver
    password: Sy991209!
    url: jdbc:mysql://124.222.135.79:3306/young_im?serverTimezone=UTC&useSSL=false&characterEncoding=UTF8
    username: root

  redis:
    host: 124.222.135.79
    port: 6379
    jedis:
      pool:
        max-active: 100
        max-idle: 100
        max-wait: 1000
        min-idle: 10
    password: sy991209!
  # rabbitmq
  rabbitmq:
    host: 124.222.135.79
    port: 5672
    addresses: 124.222.135.79
    username: guest
    password: guest
    #    virtual-host:
    listener:
      simple:
        concurrency: 5
        max-concurrency: 10
        acknowledge-mode: MANUAL
        prefetch: 1
    #    publisher-confirms: true
    publisher-returns: true
    template:
      mandatory: true
    cache:
      connection:
        mode: channel
      channel:
        size: 36
        checkout-timeout: 0

# logger 配置
#logging:
#  config: classpath:logback-spring.xml

mybatis-plus:
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  mapper-locations: classpath*:mapper/*.xml
  global-config:
    db-config:
      update-strategy: NOT_EMPTY

#mybatis:
#  configuration:
#    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl